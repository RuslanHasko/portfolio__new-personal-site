/*! sanitize.css v4.1.0 | CC0 License | github.com/jonathantneal/sanitize.css */
/* Elements of HTML (https://html.spec.whatwg.org/multipage/semantics.html#semantics)
   ========================================================================== */
/**
 * 1. Remove repeating backgrounds in all browsers (opinionated).
 * 2. Add box sizing inheritence in all browsers (opinionated).
 */
*,
::before,
::after {
  background-repeat: no-repeat;
  /* 1 */
  box-sizing: inherit;
  /* 2 */ }

/**
 * 1. Add text decoration inheritance in all browsers (opinionated).
 * 2. Add vertical alignment inheritence in all browsers (opinionated).
 */
::before,
::after {
  text-decoration: inherit;
  /* 1 */
  vertical-align: inherit;
  /* 2 */ }

/**
 * 1. Add border box sizing in all browsers (opinionated).
 * 2. Add the default cursor in all browsers (opinionated).
 * 3. Add a flattened line height in all browsers (opinionated).
 * 4. Prevent font size adjustments after orientation changes in IE and iOS.
 */
html {
  box-sizing: border-box;
  /* 1 */
  cursor: default;
  /* 2 */
  font-family: sans-serif;
  /* 3 */
  line-height: 1.5;
  /* 3 */
  -ms-text-size-adjust: 100%;
  /* 4 */
  -webkit-text-size-adjust: 100%;
  /* 4 */
  width: 100%; }

/* Sections (https://html.spec.whatwg.org/multipage/semantics.html#sections)
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
  width: 100%;
  overflow-x: hidden; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: .67em 0; }

/* Grouping content (https://html.spec.whatwg.org/multipage/semantics.html#grouping-content)
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * Remove the list style on navigation lists in all browsers (opinionated).
 */
nav ol,
nav ul {
  list-style: none; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics (https://html.spec.whatwg.org/multipage/semantics.html#text-level-semantics)
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ffff00;
  color: #000000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

/*
 * Remove the text shadow on text selections (opinionated).
 * 1. Restore the coloring undone by defining the text shadow (opinionated).
 */
::-moz-selection {
  background-color: #b3d4fc;
  /* 1 */
  color: #000000;
  /* 1 */
  text-shadow: none; }

::selection {
  background-color: #b3d4fc;
  /* 1 */
  color: #000000;
  /* 1 */
  text-shadow: none; }

/* Embedded content (https://html.spec.whatwg.org/multipage/embedded-content.html#embedded-content)
   ========================================================================== */
/*
 * Change the alignment on media elements in all browers (opinionated).
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Change the fill color to match the text color in all browsers (opinionated).
 */
svg {
  fill: currentColor; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Tabular data (https://html.spec.whatwg.org/multipage/tables.html#tables)
   ========================================================================== */
table {
  border-collapse: collapse; }

/* Forms (https://html.spec.whatwg.org/multipage/forms.html#forms)
   ========================================================================== */
/**
 * Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  margin: 0; }

/**
 * Remove the default styling in all browsers (opinionated).
 */
button,
input,
select,
textarea {
  background-color: transparent;
  color: inherit;
  font-size: inherit;
  line-height: inherit; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * 1. Remove the default vertical scrollbar in IE.
 * 2. Change the resize direction on textareas in all browsers (opinionated).
 */
textarea {
  overflow: auto;
  /* 1 */
  resize: vertical;
  /* 2 */ }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive elements (https://html.spec.whatwg.org/multipage/forms.html#interactive-elements)
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting (https://html.spec.whatwg.org/multipage/scripting.html#scripting-3)
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* User interaction (https://html.spec.whatwg.org/multipage/interaction.html#editing)
   ========================================================================== */
/*
 * Remove the tapping delay on clickable elements (opinionated).
 * 1. Remove the tapping delay in IE 10.
 */
a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
  /* 1 */
  touch-action: manipulation; }

/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/* ARIA in HTML (https://w3c.github.io/html-aria/)
   ========================================================================== */
/**
 * Change the cursor on busy elements (opinionated).
 */
[aria-busy="true"] {
  cursor: progress; }

/*
 * Change the cursor on control elements (opinionated).
 */
[aria-controls] {
  cursor: pointer; }

/*
 * Change the display on visually hidden accessible elements (opinionated).
 */
[aria-hidden="false"][hidden] {
  clip: rect(0, 0, 0, 0);
  display: inherit;
  position: absolute; }

[aria-hidden="false"][hidden]:focus {
  clip: auto; }

/*
 * Change the cursor on disabled, not-editable, or otherwise
 * inoperable elements (opinionated).
 */
[aria-disabled] {
  cursor: default; }

@font-face {
  font-family: 'BrandonGrotesqueThin';
  src: url("../fonts/BrandonGrotesque-Thin.eot");
  src: url("../fonts/BrandonGrotesque-Thin.eot?#iefix") format("embedded-opentype"), url("../fonts/BrandonGrotesque-Thin.woff") format("woff"), url("../fonts/BrandonGrotesque-Thin.ttf") format("truetype");
  font-weight: 100;
  font-style: normal; }

p {
  font-size: 15px;
  line-height: 1.3; }
  @media screen and (min-width: 600px) {
    p {
      font-size: 16px; } }
  @media screen and (min-width: 992px) {
    p {
      font-size: 17px;
      line-height: 1.4; } }
  @media screen and (min-width: 900px) {
    p {
      font-size: 18px; } }
  @media screen and (min-width: 1200px) {
    p {
      font-size: 19px;
      line-height: 1.45; } }
  @media screen and (min-width: 1440px) {
    p {
      font-size: 20px; } }

.content-container_header * {
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

.content-container_header h1 {
  font-size: 54px;
  line-height: 1;
  font-family: "BrandonGrotesqueThin", sans-serif;
  margin: 0;
  font-weight: 100; }
  @media screen and (min-width: 400px) {
    .content-container_header h1 {
      font-size: 60px;
      line-height: 1; } }
  @media screen and (min-width: 640px) {
    .content-container_header h1 {
      font-size: 96px;
      line-height: 1; } }

.content-container_header p {
  font-size: 14px;
  line-height: 1.5;
  font-family: 'Roboto', sans-serif;
  letter-spacing: 5px;
  margin: 12px 0; }
  @media screen and (min-width: 400px) {
    .content-container_header p {
      font-size: 16px;
      line-height: 1.5; } }
  @media screen and (min-width: 640px) {
    .content-container_header p {
      font-size: 22px;
      line-height: 1.5; } }

.content-container_header .small {
  font-size: 8.8px;
  line-height: 1.5;
  display: block;
  margin: 0;
  font-family: 'Roboto', sans-serif;
  letter-spacing: 5px;
  font-weight: 600; }
  @media screen and (min-width: 400px) {
    .content-container_header .small {
      font-size: 9.6px;
      line-height: 1.5; } }
  @media screen and (min-width: 640px) {
    .content-container_header .small {
      font-size: 12.8px;
      line-height: 1.5; } }

a {
  color: #fff;
  opacity: 1;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  line-height: 1.5;
  letter-spacing: 5px;
  text-decoration: none;
  font-family: 'Roboto', sans-serif; }

.header {
  position: relative;
  height: 100vh;
  width: 100%;
  margin: 0;
  padding: 30px 0 0;
  background-image: url("../images/bg-header.jpg");
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  text-align: center; }
  .header:before {
    display: block;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: rgba(63, 81, 181, 0.4);
    zoom: 1;
    z-index: 3; }

.content-container_header {
  position: absolute;
  top: 45%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 100%;
  max-width: 800px;
  padding: 0 15px;
  color: #fff;
  z-index: 4; }
  .content-container_header h1,
  .content-container_header p,
  .content-container_header .small {
    display: none; }
  .content-container_header .animation_header {
    display: block;
    -webkit-animation-name: showHeaderTitles;
            animation-name: showHeaderTitles;
    -webkit-animation-duration: 1s;
            animation-duration: 1s;
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
    -webkit-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    visibility: visible; }
  .content-container_header::after {
    display: none;
    background: #fff;
    content: "";
    position: absolute;
    left: 50%;
    bottom: -24px;
    width: 140px;
    height: 2px;
    margin-left: -70px;
    visibility: hiden; }

.animation_header-line::after {
  display: block;
  -webkit-animation-name: showLine;
          animation-name: showLine;
  -webkit-animation-duration: 2.5s;
          animation-duration: 2.5s;
  -webkit-animation-timing-function: ease-in-out;
          animation-timing-function: ease-in-out;
  -webkit-transform-origin: 50% 100%;
          transform-origin: 50% 100%;
  visibility: visible; }

.particles-animation {
  height: 100%;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  overflow: hidden;
  z-index: 2; }
  @media screen and (max-width: 600px) {
    .particles-animation {
      display: none; } }

.mouse-scroll-animate-icon {
  display: none;
  margin: 0 auto;
  width: 15px;
  height: 25px;
  border-radius: 13px;
  border: 1px solid #fff;
  position: absolute;
  bottom: 30px;
  position: absolute;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  z-index: 5; }

.mouse-scroll-animate-icon span {
  display: block;
  margin: 6px auto;
  width: 2px;
  height: 2px;
  border-radius: 4px;
  background: #fff;
  border: 1px solid transparent;
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
  -webkit-animation-name: scroll;
  animation-name: scroll; }

@-webkit-keyframes showLine {
  0% {
    -webkit-transform: scaleX(0.01);
            transform: scaleX(0.01); }
  40% {
    -webkit-transform: scaleX(1.02);
            transform: scaleX(1.02); }
  60% {
    -webkit-transform: scaleX(0.98);
            transform: scaleX(0.98); }
  80% {
    -webkit-transform: scaleX(1.01);
            transform: scaleX(1.01); }
  100% {
    -webkit-transform: scaleX(0.98);
            transform: scaleX(0.98); } }

@keyframes showLine {
  0% {
    -webkit-transform: scaleX(0.01);
            transform: scaleX(0.01); }
  40% {
    -webkit-transform: scaleX(1.02);
            transform: scaleX(1.02); }
  60% {
    -webkit-transform: scaleX(0.98);
            transform: scaleX(0.98); }
  80% {
    -webkit-transform: scaleX(1.01);
            transform: scaleX(1.01); }
  100% {
    -webkit-transform: scaleX(0.98);
            transform: scaleX(0.98); } }

@-webkit-keyframes showHeaderTitles {
  0% {
    -webkit-transform: scale(0.01);
            transform: scale(0.01); }
  40% {
    -webkit-transform: scale(1.02);
            transform: scale(1.02); }
  60% {
    -webkit-transform: scale(0.98);
            transform: scale(0.98); }
  80% {
    -webkit-transform: scale(1.01);
            transform: scale(1.01); }
  100% {
    -webkit-transform: scale(0.98);
            transform: scale(0.98); } }

@keyframes showHeaderTitles {
  0% {
    -webkit-transform: scale(0.01);
            transform: scale(0.01); }
  40% {
    -webkit-transform: scale(1.02);
            transform: scale(1.02); }
  60% {
    -webkit-transform: scale(0.98);
            transform: scale(0.98); }
  80% {
    -webkit-transform: scale(1.01);
            transform: scale(1.01); }
  100% {
    -webkit-transform: scale(0.98);
            transform: scale(0.98); } }

@-webkit-keyframes scroll {
  0% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0); }
  100% {
    opacity: 0;
    -webkit-transform: translateY(20px);
    transform: translateY(20px); } }

@keyframes scroll {
  0% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0); }
  100% {
    opacity: 0;
    -webkit-transform: translateY(20px);
    transform: translateY(20px); } }

.navigation {
  position: absolute;
  top: 0;
  max-height: 64px;
  z-index: 999;
  width: 100%;
  background: none;
  overflow: hidden;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  opacity: 1;
  padding-bottom: 6px; }
  @media only screen and (max-width: 766px) {
    .navigation {
      padding-top: 30px; } }

.navigation_sticky {
  position: fixed;
  background: rgba(28, 30, 32, 0.95);
  box-shadow: 0 4px 0 rgba(63, 81, 181, 0.4);
  opacity: 1;
  top: 0px;
  -webkit-transition: all 0.3s;
  transition: all 0.3s; }

.navigation_sticking {
  position: fixed;
  top: -100px; }

.nav-items {
  padding: 0;
  margin: 20px 0;
  display: inline-block;
  list-style-type: none; }

.nav-items__item {
  float: left; }
  .nav-items__item:not(:last-child) {
    margin-right: 40px; }

.nav-items__link {
  position: relative; }
  .nav-items__link::after {
    position: absolute;
    bottom: -6px;
    left: 0;
    right: 0;
    margin: auto;
    width: 0;
    content: '';
    color: transparent;
    height: 2px;
    -webkit-transition: all 0.3s;
    transition: all 0.3s;
    z-index: 10;
    background-color: #fff; }
  .nav-items__link:hover::after {
    width: 100%; }

.toggle-icon {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  display: none;
  cursor: pointer;
  font-size: 20px;
  position: absolute;
  right: 18px;
  top: 15px;
  width: 45px;
  -webkit-transition: all 200ms ease-in;
  transition: all 200ms ease-in;
  -webkit-transform-origin: 50% 50%;
          transform-origin: 50% 50%; }
  @media only screen and (max-width: 766px) {
    .toggle-icon {
      display: block; } }

.toggle-icon .toggle-icon__line-h {
  width: 45px;
  height: 4px;
  margin-bottom: 10px;
  border-radius: 1000px;
  background: #fff;
  display: block; }

.navigation__open {
  max-height: 320px !important; }
  .navigation__open .toggle-icon {
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg); }

.navigation__open__top {
  background: rgba(28, 30, 32, 0.95);
  box-shadow: 0 4px 0 rgba(63, 81, 181, 0.4); }

.navigation .nav-items {
  list-style: none;
  overflow: hidden;
  text-align: center; }
  @media only screen and (max-width: 766px) {
    .navigation .nav-items {
      padding-top: 10px;
      margin-bottom: 22px;
      text-align: center;
      width: 100%; } }

.navigation .nav-items .nav-items__item {
  padding-bottom: 7px; }
  @media only screen and (max-width: 766px) {
    .navigation .nav-items .nav-items__item {
      width: 100%;
      padding: 7px 0;
      margin: 0; } }

.navigation .nav-items .nav-items__link {
  display: inline-block;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

.main {
  position: relative;
  z-index: 5; }

section {
  position: relative;
  padding: 40px 0; }

#education {
  background-color: #000;
  min-height: 100vh; }

.content-container {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  text-align: center; }
  @media only screen and (max-width: 992px) {
    .content-container {
      padding: 0 25px; } }

.top-dec {
  height: 60px;
  width: 100%;
  position: absolute;
  top: -59px;
  z-index: 5; }
  .top-dec .decor {
    stroke: #1c1e20;
    fill: #fff; }

.bottom-dec {
  height: 60px;
  width: 100%;
  position: absolute;
  bottom: -59px;
  z-index: 5; }
  .bottom-dec .decor {
    stroke: #1c1e20;
    fill: #fff; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
