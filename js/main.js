window.app={global:{initLinkScroll:function(){var n=$('a[href^="javascript:void(0)"]');n.click(function(){var n=$(this).attr("data-id"),i=$("#"+n);if(0!==i.length){var e=$("#"+n).offset().top-50;$("body, html").animate({scrollTop:e})}})},initHeaderParticlesAnimation:function(){particlesJS("particles-js",particlesConfig)},initHeaderAnimationEffects:function(){$(document).ready(function(){$(".content-container_header h1, .content-container_header p, .content-container_header span, .mouse-scroll-animate-icon").addClass("animation_header").delay(1e3).queue(function(){$(this).css("display","block"),$(this).removeClass("animation_header").dequeue()}),$(".content-container_header").addClass("animation_header-line").addClass("animation_header").delay(2500).queue(function(){$(this).removeClass("animation_header").dequeue()})})},initPageNav:function(){function n(){o.removeClass("navigation__open"),o.removeClass("navigation__open__top"),$("body").css("overflow","inherit"),$("body").css("overflow-x","hidden")}var i,e=0,a=$(window).height()/2,o=$(".navigation"),t={up:null,down:null};$(window).scroll(function(){e=$(window).scrollTop(),0!=t.up&&i<e&&$(window).scrollTop()>a?(o.stop(!0,!0).addClass("navigation_sticky"),t.down=!0,t.up=!1):1!=t.up&&i>e&&$(window).scrollTop()>100&&o.hasClass("navigation_sticky")&&(o.stop(!0,!0).addClass("navigation_sticking").removeClass("navigation_sticky").delay(100).queue(function(){$(this).removeClass("navigation_sticking").dequeue()}),t.up=!0,t.down=!1),i=e}),$(".toggle-icon").click(function(){o.hasClass("navigation__open")?n():(o.addClass("navigation__open__top"),o.addClass("navigation__open"),$("body").css("overflow","hidden"))}),$(".navigation li a").click(function(){o.hasClass("navigation__open")&&n()}),$(document).click(function(i){$(i.target).closest(".navigation").length||(o.hasClass("navigation__open")&&n(),i.stopPropagation())}),$(window).on("load resize",function(n){$(window).height()<400?$(".mouse-scroll-animate-icon").css("display","none"):$(".mouse-scroll-animate-icon").css("display","block")})},initPageBackgroundSong:function(){},init:function(){this.initLinkScroll(),this.initHeaderAnimationEffects(),this.initHeaderParticlesAnimation(),this.initPageNav(),this.initPageBackgroundSong()}}},$(function(){app.global.init()});var particlesConfig={particles:{number:{value:80,density:{enable:!0,value_area:800}},color:{value:"#ffffff"},shape:{type:"circle",stroke:{width:0,color:"#000000"},polygon:{nb_sides:5},image:{src:"img/github.svg",width:100,height:100}},opacity:{value:.5,random:!1,anim:{enable:!1,speed:1,opacity_min:.1,sync:!1}},size:{value:3,random:!0,anim:{enable:!1,speed:20,size_min:.1,sync:!1}},line_linked:{enable:!0,distance:150,color:"#ffffff",opacity:.9,width:1},move:{enable:!0,speed:2,direction:"none",random:!1,straight:!1,out_mode:"out",bounce:!1,attract:{enable:!1,rotateX:600,rotateY:1200}}},interactivity:{detect_on:"canvas",events:{onhover:{enable:!1,mode:"repulse"},onclick:{enable:!1,mode:"push"},resize:!0},modes:{grab:{distance:400,line_linked:{opacity:1}},bubble:{distance:400,size:40,duration:2,opacity:8,speed:3},repulse:{distance:200,duration:.4},push:{particles_nb:4},remove:{particles_nb:2}}},retina_detect:!0};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
